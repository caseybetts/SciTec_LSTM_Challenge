# k8s-deployment.yaml
# Complete Kubernetes deployment configuration
---
apiVersion: v1
kind: Namespace
metadata:
  name: missile-classifier
  labels:
    app: missile-classifier

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: missile-classifier-config
  namespace: missile-classifier
data:
  MODEL_PATH: "/app/models/missile_lstm_model.h5"
  SCALER_PATH: "/app/models/scaler.pkl"
  HOST: "0.0.0.0"
  PORT: "8000"
  LOG_LEVEL: "INFO"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: missile-classifier-deployment
  namespace: missile-classifier
  labels:
    app: missile-classifier
spec:
  replicas: 3
  selector:
    matchLabels:
      app: missile-classifier
  template:
    metadata:
      labels:
        app: missile-classifier
    spec:
      containers:
      - name: missile-classifier
        image: missile-classifier:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: missile-classifier-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
          readOnly: true
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: missile-classifier-service
  namespace: missile-classifier
  labels:
    app: missile-classifier
spec:
  selector:
    app: missile-classifier
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: missile-classifier-nodeport
  namespace: missile-classifier
  labels:
    app: missile-classifier
spec:
  selector:
    app: missile-classifier
  ports:
  - name: http
    port: 80
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  type: NodePort

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
  namespace: missile-classifier
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: missile-classifier-hpa
  namespace: missile-classifier
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: missile-classifier-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: missile-classifier-ingress
  namespace: missile-classifier
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: missile-classifier.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: missile-classifier-service
            port:
              number: 80

---
# Monitoring ServiceMonitor for Prometheus (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: missile-classifier-monitor
  namespace: missile-classifier
  labels:
    app: missile-classifier
spec:
  selector:
    matchLabels:
      app: missile-classifier
  endpoints:
  - port: http
    path: /metrics
    interval: 30s